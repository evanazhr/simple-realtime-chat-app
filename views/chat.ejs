<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Chat Room</title>
  <script src="/socket.io/socket.io.js"></script>
  <style>
    body {
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      background: #121212;
      margin: 0;
      padding: 0;
      display: flex;
      flex-direction: column;
      height: 100vh;
      color: #eee;
    }
    header {
      background-color: #26a69a;
      color: #121212;
      padding: 1rem 2rem;
      display: flex;
      justify-content: space-between;
      align-items: center;
      font-weight: 600;
      box-shadow: 0 2px 6px rgba(38, 166, 154, 0.6);
    }
    header a {
      color: #121212;
      text-decoration: none;
      font-weight: 700;
      background: #80cbc4;
      padding: 0.25rem 0.75rem;
      border-radius: 6px;
      transition: background-color 0.3s ease;
    }
    header a:hover {
      background-color: #4db6ac;
      color: #121212;
    }
    main {
      flex: 1;
      display: flex;
      flex-direction: column;
      max-width: 600px;
      margin: 1rem auto;
      background: #1e1e1e;
      border-radius: 12px;
      box-shadow: 0 8px 20px rgba(0,0,0,0.8);
      padding: 1rem 1.5rem;
      color: #eee;
    }
    #chat-box {
      flex: 1;
      border: 1px solid #333;
      border-radius: 8px;
      padding: 1rem;
      overflow-y: auto;
      background: #292929;
      margin-bottom: 1rem;
      box-shadow: inset 0 0 8px #444;
      display: flex;
      flex-direction: column;
      gap: 0.25rem;
    }
    #chat-box p {
      margin: 0;
      padding: 0.5rem 0.75rem;
      border-radius: 8px;
      background: #3a3a3a;
      max-width: 80%;
      word-wrap: break-word;
      color: #eee;
      box-shadow: 0 1px 3px rgba(0,0,0,0.5);
    }
    #chat-box p strong {
      color: #26a69a;
    }
    #chat-box p.self {
      background: #00796b;
      align-self: flex-end;
      color: #c8f8f3;
      font-weight: 600;
      box-shadow: 0 1px 5px #004d40;
    }
    form {
      display: flex;
      gap: 0.75rem;
    }
    input#message {
      flex: 1;
      padding: 0.75rem 1rem;
      font-size: 1rem;
      border-radius: 8px;
      border: 1.5px solid #26a69a;
      background: #1e1e1e;
      color: #eee;
      outline-offset: 2px;
      outline-color: #80cbc4;
      transition: box-shadow 0.3s ease, border-color 0.3s ease;
    }
    input#message::placeholder {
      color: #888;
    }
    input#message:focus {
      box-shadow: 0 0 12px #80cbc4aa;
      border-color: #80cbc4;
    }
    button {
      background-color: #26a69a;
      border: none;
      color: #121212;
      font-weight: 700;
      padding: 0 1.5rem;
      border-radius: 8px;
      cursor: pointer;
      transition: background-color 0.3s ease;
      font-size: 1rem;
      user-select: none;
    }
    button:hover {
      background-color: #1e8e82;
    }
    @media (max-width: 640px) {
      main {
        margin: 0.5rem;
        border-radius: 8px;
        padding: 1rem;
      }
    }
  </style>
</head>
<body>
  <header>
    <div>Welcome, <%= username %></div>
    <a href="/logout">Logout</a>
  </header>

  <main>
    <div id="chat-box">
      <% messages.forEach(msg => { %>
        <p class="<%= msg.sender === username ? 'self' : '' %>"><strong><%= msg.sender %>:</strong> <%= msg.message %></p>
      <% }) %>
    </div>

    <form onsubmit="sendMessage(event)">
      <input id="message" autocomplete="off" placeholder="Type a message..." />
      <button type="submit">Send</button>
    </form>
  </main>

  <script>
    const socket = io();
    const username = "<%= username %>";

    socket.on('new_message', (data) => {
      const chatBox = document.getElementById('chat-box');
      const p = document.createElement('p');
      p.className = data.username === username ? 'self' : '';
      p.innerHTML = `<strong>${data.username}:</strong> ${data.message}`;
      chatBox.appendChild(p);
      chatBox.scrollTop = chatBox.scrollHeight;
    });

    function sendMessage(e) {
      e.preventDefault();
      const input = document.getElementById('message');
      const message = input.value.trim();
      if (!message) return;
      socket.emit('new_message', { username, message });
      input.value = '';
    }
  </script>
</body>
</html>
